class Solution {
    private int dist(int[] p1, int[] p2) {
        return (p2[0]-p1[0])*(p2[0]-p1[0]) + (p2[1]-p1[1])*(p2[1]-p1[1]);
    }

    public boolean validSquare(int[] p1, int[] p2, int[] p3, int[] p4) {
        int[] len = {dist(p1, p2), dist(p1, p3), dist(p1, p4), dist(p2, p3), dist(p2,p4), dist(p3,p4)};   
        Arrays.sort(len);
        
        //if diagonals are of equal length
        if(len[4] == len[5])
            //if length of all 4 sides is equal and not equal to the length of diagonal, then the co-ordinates form a square
            if(len[0] == len[1] && len[1] == len[2] && len[2] == len[3] && len[0] != len[4]) 
                return true;
        return false;
    }
}
